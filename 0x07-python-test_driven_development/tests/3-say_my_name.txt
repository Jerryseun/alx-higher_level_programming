===========================
How to Use matrix_divided
===========================

Usage
-------------------

Importing the function from the module:
        >>> say_my_name = __import__("3-say_my_name").say_my_name

Checking for module docstring:
	>>> len(__import__("3-say_my_name").__doc__) > 1
	True

Checking for function docstring:
	>>> len(__import__("3-say_my_name").say_my_name.__doc__) > 1
	True

Both Strings
	>>> say_my_name("Elon", "Musk")
	My name is Elon Musk

Single parameter string
	>>> say_my_name("Elon")
	My name is Elon 

Parenthesis
	>>> say_my_name(("Thomas"), "Edison")
	My name is Thomas Edison

No parameter
	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

None
	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

Non String parameters
        >>> say_my_name("Elon", 3)
	Traceback (most recent call last):
	TypeError: last_name must be a string

	>>> say_my_name(Thomas, "Edison")
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name(3, 5)
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name([], "Edison")
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name(("Thomas", ), "Edison")
	Traceback (most recent call last):
	TypeError: first_name must be a string
